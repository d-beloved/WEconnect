swagger: '2.0'
info:
  description: >-
    This is a Node-Express app called "WeConnect", it provides a platform that brings businesses and individuals together.    
    There is no need for Authorization for these endpoints yet...
  version: 1.0.0
  title: WEconnect App
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: morayodeji@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: ayo-weconnect-dummy.herokuapp.com
basePath: /api/v1
tags:
  - name: Weconnect
    description: Connecting you to busineses that matters
    externalDocs:
      description: Find out more
      url: 'https://d-beloved.github.io/WEconnect/template'
  - name: business
    description: access to available businesses
  - name: user
    description: operations available for Users
schemes:
  - https
  - http
paths:
  /:
    get:
      tags:
        - Index
      summary: Welcomes visitors to the App
      description: ''
      produces:
        - application/json
      responses:
        '200':
          description: Success
 
  /auth/signup:
    post:
      tags:
        - user
      summary: Create user
      description: This can be used for registering on the App.
      operationId: createUser
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Created user object
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '400':
          description: Empty field found
        '409':
          description: Conflict in request
        '201':
          description: Created successfully
  
  /auth/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: 'Access your dashboard to create your buisness'
      operationId: loginUser
      produces:
        - application/json
      parameters:
        - name: email
          in: query
          description: The user email for log in
          required: true
          type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
          headers:
            X-Rate-Limit:
              type: integer
              format: int32
              description: calls per hour allowed by the user
            X-Expires-After:
              type: string
              format: date-time
              description: date in UTC when token expires
        '401':
          description: Invalid email/password supplied
        '400':
          description: Empty fields found.
  
  /businesses:
    post:
      tags:
        - business
      summary: Add a new business to the app
      description: 'creates a business for a user'
      operationId: createBusiness
      consumes:
        - application/json
      security:
        - APIKeyHeader: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Business that needs to be added to the app
          schema:
            $ref: '#/definitions/Business'
      responses:
        '400':
          description: Empty fields found.
        '201':
          description: created successfully
    get:
      tags:
        - business
      summary: Returns all business or according to query parameters (Location and category)
      description: '"```/businesses?location=<location>" to query by location and "```/businesses?category=<category>" to query by category' 
      operationId: getAllBusiness
      produces: []
      responses:
        '200':
          description: successful operation
          schema:
            type: object
    
  '/businesses/{businessId}':
    put:
      tags:
        - business
      summary: Update an existing business
      description: ''
      operationId: modifyBusiness
      consumes:
        - application/json
      security:
        - APIKeyHeader: []
      produces:
        - application/json
      parameters:
        - name: businessId
          in: path
          description: Business id to edit
          required: true
          type: integer
          format: int64
      responses:
        '404':
          description: Business not found
        '200':
          description: Edit successful
    delete:
      tags:
        - business
      summary: Deletes a business
      description: ''
      operationId: deleteBusiness
      produces:
        - application/json
      security:
        - APIKeyHeader: []
      parameters:
        - name: businessId
          in: path
          description: Business id to delete
          required: true
          type: integer
          format: int64
      responses:
        '404':
          description: Business not found
        '200':
          description: delete successful
    get:
      tags:
        - business
      summary: Finds a business by Id
      description: ''
      operationId: getoneBusiness
      produces:
        - application/json
      parameters:
        - name: businessId
          in: path
          description: Business that will be gotten
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: Business not found
          
  '/businesses/userBiz':       
    get:
      tags:
        - business
      summary: Finds a business by UserId
      description: 'Get all business by one user'
      operationId: getsAllBusinessByUSer
      produces:
        - application/json
      security:
        - APIKeyHeader: []
      parameters:
        - name: userBiz
          in: path
          description: Business that will be gotten
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
        '404':
          description: Business not found
  
  '/businesses/{businessId}/reviews':
    post:
      tags:
        - reviews
      summary: writes reviews for a business
      description: ''
      operationId: addReview
      consumes:
        - application/json
      security:
        - APIKeyHeader: []
      produces:
        - application/json
      parameters:
        - name: businessId
          in: path
          description: ID of business to review
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Reviews to be added to the business
          schema:
            $ref: '#/definitions/Reviews'
      responses:
        '400':
          description: Empty field found
        '409':
          description: Conflict in request
        '201':
          description: Created successfully
          schema:
            $ref: '#/definitions/ApiResponse'
    get:
      tags:
        - reviews
      summary: Finds all reviewa for a business
      description: ''
      operationId: getReviews
      produces:
        - application/json
      parameters:
        - name: businessId
          in: path
          description: Business that will be gotten
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: Reviews to be added to the business
          schema:
            $ref: '#/definitions/Reviews'
      responses:
        '200':
          description: successful operation
        '404':
          description: Business not found
securityDefinitions:
   # X-API-Key: abcdef12345
   APIKeyHeader:
     type: apiKey
     in: header
     name: X-API-Key
definitions:
  User:
    type: object
    required:
      - firstName
      - lastName
      - email
      - password
    properties:
      id:
        type: integer
        format: int64
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      password:
        type: string
  Reviews:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      review:
        type: string
  Business:
    type: object
    required:
      - name
      - phoneno
      - location
      - category
      - services
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Abshat Tech
      address:
        type: string
      website:
        type: string
      phoneno:
        type: string
      details:
        type: string
      location:
        type: string
      category:
        type: string
      services:
        type: string
  ApiResponse:
    type: object
    properties:
      code:
        type: integer
        format: int32
      type:
        type: string
      message:
        type: string
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
